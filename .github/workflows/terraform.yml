# name: 'Terraform linting and fmt check'

# on:
#   push:
#     branches:
#       - main
#   release:
#     types: [published]
#   pull_request:

# jobs:
#   terraform:
#     name: 'Terraform'
#     runs-on: ubuntu-latest
#     # defaults:
#     #   run:
#     #     working-directory: 03-linting-and-format
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#         #   with:
#       #     submodules: true
#       # - name: Set up Go
#       #   uses: actions/setup-go@v4
#       #   with:
#       #     go-version-file: 'go.mod'
#       # - name: Run linters
#       #   uses: golangci/golangci-lint-action@v3.4.0
#       #   with:
#       #     version: v1.51

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 1.0.1
#           terraform_wrapper: false

#       # Minimal example
#       - name: tflint
#         uses: reviewdog/action-tflint@master
#         with:
#           github_token: ${{ secrets.github_token }}

#       # More complex example
#       - name: tflint
#         uses: reviewdog/action-tflint@master
#         with:
#           github_token: ${{ secrets.github_token }}
#           fail_on_error: 'true' # Optional. Fail action if errors are found

# - name: Terraform Format
#   id: fmt
#   run: terraform fmt -check

# - name: Terraform Init
#   id: init
#   run: terraform init

# - name: Terraform Validate
#   id: validate
#   run: terraform validate
name: Tflint Checks on Terraform Code

on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  tflint-checks:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Check out Git Repository
        uses: actions/checkout@v3

      # TFLint - Terraform Check
      - uses: actions/cache@v2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}

      # Print TFLint version
      - name: Show version
        run: tflint --version

      # Install plugins
      - name: Init TFLint
        run: tflint --init

      # Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
      - name: Run TFLint
        run: tflint -f compact --recursive
